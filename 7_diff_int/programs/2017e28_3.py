n = 20
x = [-0.9931285991850949247861,-0.9639719272779137912677,-0.9122344282513259058678,-0.8391169718222188233945,-0.7463319064601507926143,-0.6360536807265150254528,-0.5108670019508270980044,-0.3737060887154195606725,-0.2277858511416450780805,-0.07652652113349733375464,0.0765265211334973337546,0.2277858511416450780805,0.3737060887154195606725,0.5108670019508270980044,0.6360536807265150254528,0.7463319064601507926143,0.8391169718222188233945,0.9122344282513259058678,0.9639719272779137912677,0.9931285991850949247861]
w = [0.0176140071391521183119,0.04060142980038694133104,0.0626720483341090635695,0.0832767415767047487248,0.1019301198172404350368,0.1181945319615184173124,0.1316886384491766268985,0.1420961093183820513293,0.1491729864726037467878,0.1527533871307258506981,0.152753387130725850698,0.149172986472603746788,0.142096109318382051329,0.1316886384491766268985,0.1181945319615184173124,0.101930119817240435037,0.083276741576704748725,0.0626720483341090635695,0.040601429800386941331,0.0176140071391521183119]
def f(x):return (1-x**2)**0.5
def gaus(a,b,f):
  return (b-a)/2*sum(w[i]*f((b-a)/2*x[i]+(b+a)/2)for i in range(n))

#print(4*gaus(0,1,f))

from math import pi
from sympy import *
import numpy as np
init_printing()

def gauss(a,b,f,n):
  if n==7:
    X,W = [[0, -0.741531185599394 + 2.64862748557095e-102, 0.741531185599394 + 9.93235307089107e-103, -0.949107912342758 - 8.475143568547e-103, 0.949107912342758 - 2.11878589213675e-103, -0.405845151377397 - 3.62403039716727e-103, 0.405845151377397 + 3.62403039716727e-103],[512/1225, 2/((1 - (-0.741531185599394 + 2.64862748557095e-102)**2)*(-35/16 + 3003*(-0.741531185599394 + 2.64862748557095e-102)**6/16 + 945*(-0.741531185599394 + 2.64862748557095e-102)**2/16 - 3465*(-0.741531185599394 + 2.64862748557095e-102)**4/16)**2), 2/((1 - (0.741531185599394 + 9.93235307089107e-103)**2)*(-35/16 - 3465*(0.741531185599394 + 9.93235307089107e-103)**4/16 + 945*(0.741531185599394 + 9.93235307089107e-103)**2/16 + 3003*(0.741531185599394 + 9.93235307089107e-103)**6/16)**2), 2/((1 - (-0.949107912342758 - 8.475143568547e-103)**2)*(-35/16 - 3465*(-0.949107912342758 - 8.475143568547e-103)**4/16 + 945*(-0.949107912342758 - 8.475143568547e-103)**2/16 + 3003*(-0.949107912342758 - 8.475143568547e-103)**6/16)**2), 2/((1 - (0.949107912342758 - 2.11878589213675e-103)**2)*(-35/16 + 3003*(0.949107912342758 - 2.11878589213675e-103)**6/16 + 945*(0.949107912342758 - 2.11878589213675e-103)**2/16 - 3465*(0.949107912342758 - 2.11878589213675e-103)**4/16)**2), 2/((1 - (-0.405845151377397 - 3.62403039716727e-103)**2)*(-35/16 - 3465*(-0.405845151377397 - 3.62403039716727e-103)**4/16 + 3003*(-0.405845151377397 - 3.62403039716727e-103)**6/16 + 945*(-0.405845151377397 - 3.62403039716727e-103)**2/16)**2), 2/((1 - (0.405845151377397 + 3.62403039716727e-103)**2)*(-35/16 - 3465*(0.405845151377397 + 3.62403039716727e-103)**4/16 + 3003*(0.405845151377397 + 3.62403039716727e-103)**6/16 + 945*(0.405845151377397 + 3.62403039716727e-103)**2/16)**2)]]
    return (b-a)/2*sum(W[i]*f((b-a)/2*X[i]+(b+a)/2) for i in range(n))
  x = Symbol('x')
  P = legendre(n,x)
  dP = diff(P)
  res = solve(P,x)
  X = [N(r) for r in res]
  W = [2/((1-xi**2)*(dP.subs(x,xi)**2)) for xi in X]
  tmp = (b-a)/2*sum(W[i]*f((b-a)/2*X[i]+(b+a)/2) for i in range(n))
  #print("process {} is completed".format(n))
  return tmp

def f(x):return x+x**3/5+7*x**4
def g(x):return x**15
#print("This process is time consuming")
ns = [1,2,3,4,5,7,8,9,10,15,20]
#gau = [4*gauss(0,1,f,n) for n in ns]

print("integral_{0}^{1} x+x^3/5+7*x^4 dx = ",1/2+1/20+7/5)
for i in range(len(ns)):
  gaui = gauss(0,1,f,ns[i])
  t=1/2+1/20+7/5
  print("N = {0:3} : S = {1:10.8f} : err = {2:17.13f} [%]".format(ns[i],gaui,N(100*(gaui-t)/t)))
print("integral_{-12}^{34} x^15 dx = ",199316230367465312358400)
for i in range(len(ns)):
  ushi = gauss(-12,34,g,ns[i])
  tapu = 199316230367465312358400
  print("N = {0:3} : S = {1:25} : err = {2:18.13f} [%]".format(ns[i],int(ushi),N(100*(ushi-tapu)/tapu)))
